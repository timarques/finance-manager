name: Build Packages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  windows-installer:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: GuillaumeFalourd/setup-windows10-sdk-action@v2
    
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable-x86_64-pc-windows-msvc
      
      - name: Install CMake
        uses: lukka/get-cmake@latest
        
      - name: Install Dependencies
        run: |
          choco install pkgconfiglite -y
          choco install innosetup -y
          
      - name: Configure CMake
        run: |
          cmake -B build -DBUILD_INSTALLER=ON
          
      - name: Build
        run: cmake --build build

      - name: Find Installer
        id: find_installer
        run: echo "installer_path=$(find build -name '*_installer.exe' -print -quit)" >> $GITHUB_ENV
        
      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: ${{ env.installer_path }}
          
  flatpak-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install CMake
        uses: lukka/get-cmake@latest
        
      - name: Generate Flatpak Manifest
        run: |
          cmake -B build -DBUILD_FLATPAK=ON
          
      - name: Find Manifest
        id: find_manifest
        run: echo "manifest_path=$(find build -name '*.yml' -print -quit)" >> $GITHUB_ENV
        
      - name: Upload Manifest
        uses: actions/upload-artifact@v4
        with:
          name: flatpak-manifest
          path: ${{ env.manifest_path }}
          
  create-release:
    needs: [windows-installer, flatpak-manifest]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Download Windows Installer
        uses: actions/download-artifact@v4
        with:
          name: windows-installer

      - name: Download Flatpak Manifest
        uses: actions/download-artifact@v4
        with:
          name: flatpak-manifest

      - name: Find Downloaded Files
        id: find_files
        run: |
          installer_path=$(find . -name '*_installer.exe' -print -quit)
          manifest_path=$(find . -name '*.yml' -print -quit)
          echo "installer_path=$installer_path" >> $GITHUB_ENV
          echo "manifest_path=$manifest_path" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.sha }}
          files: |
            ${{ env.installer_path }}
            ${{ env.manifest_path }}